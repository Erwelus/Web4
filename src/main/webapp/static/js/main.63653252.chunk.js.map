{"version":3,"sources":["storage/storage.js","components/main/Checkboxs.js","components/main/Form.js","components/main/LogoutButton.js","components/main/Table.js","components/main/draw.js","components/main/Canvas.js","components/main/HomePage.js","components/login/LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","state","action","type","sessionStorage","clear","token","setItem","rtoken","getItem","subscribe","console","log","getState","Checkboxs","x","setX","xs","string","id","checked","check","onChange","map","Form","props","getR","R","r","r_1","className","ref","el","messageText","current","htmlFor","value","y","onValueChange","e","setY","mode","min","max","minFractionDigits","maxFractionDigits","placeholder","setR","onClick","validate","fetch","method","headers","body","JSON","stringify","then","response","text","ok","setResults","parse","status","refresh_token","json","dispatch","show","severity","summary","label","icon","logoutHandle","LogoutButton","Table","paginatorLeft","paginatorRight","results","paginator","rows","field","header","getSign","coordinate_arrow","context","x0","y0","x1","y1","delta_x","font","beginPath","lineWidth","moveTo","lineTo","stroke","fill","getDashLength","coordinate_system","height_pers","width_pers","dash_length","strokeStyle","fillStyle","canvas","height","width","y_coef","x_coef","fillText","counterx","i","countery","draw","r_array","R_value","parseFloat","getRArray","clearRect","step","arc","Math","PI","drawResult","alpha","red","green","drawPoints","length","i_old","iter","res","Canvas","useRef","maxR","useEffect","getContext","event","validateNumber","x_c","nativeEvent","offsetX","y_c","offsetY","clickPoint","HomePage","MessagesInstance","useState","React","x_vals","y_val","r_vals","MessageText","validate_number","str","n","isNaN","validation_result","LoginForm","username","setUsername","password","setPassword","target","data","description","App","this","setState","reduxState","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.63653252.chunk.js","sourcesContent":["import {createStore} from 'redux';\r\nimport React from \"react\";\r\n\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"TOKEN_CLEAR\":\r\n            sessionStorage.clear()\r\n            return {\r\n                token:action.token\r\n            }\r\n\r\n        case \"TOKEN_UPDATE\":\r\n            sessionStorage.setItem(\"access_token\", action.rtoken)\r\n            return {\r\n                token:action.token\r\n            }\r\n\r\n        case \"NEW_TOKEN\":\r\n            sessionStorage.setItem(\"access_token\", action.token)\r\n            sessionStorage.setItem(\"refresh_token\", action.rtoken)\r\n            return {\r\n                token:action.token\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\nconst store =createStore(reducer,{\r\n    token:sessionStorage.getItem(\"access_token\")\r\n})\r\n\r\nstore.subscribe(()=>console.log(store.getState()))\r\n\r\nexport default store","import {Checkbox} from \"primereact/checkbox\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction Checkboxs({x,setX,xs,string}) {\r\n\r\n    function changeX_valsOrR_value(id) {\r\n        setX(\r\n            xs.map(x => {\r\n                if(x.id === id){\r\n                    x.check = !x.check\r\n                }else if (string === \"r\"){\r\n                    x.check =false;\r\n                }\r\n                return x\r\n            })\r\n        )\r\n    }\r\n\r\n    return(\r\n        <span>\r\n            {x.id + \"-> \"}\r\n            <Checkbox checked={x.check} onChange={() => changeX_valsOrR_value(x.id)} />\r\n            &nbsp;&nbsp;\r\n        </span>\r\n    )\r\n}\r\nexport default Checkboxs\r\n","import React, {useRef} from \"react\"\r\nimport store from \"../../storage/storage\";\r\nimport {Button} from \"primereact/button\";\r\nimport {Messages} from \"primereact/messages\";\r\nimport {InputNumber} from \"primereact/inputnumber\";\r\nimport Checkboxs from \"./Checkboxs\";\r\n\r\n\r\nfunction Form(props) {\r\n\r\n    const onSubmit = () => {\r\n        props.x.map(x => {\r\n            if (x.check === true){\r\n                if (props.validate()) {\r\n                    fetch(\"/api/app/area\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json;charset=utf-8',\r\n                            'Authorization': `Bearer_${store.getState().token}`\r\n                        },\r\n                        body: JSON.stringify({x: x.id, y: props.y, r: getR()})\r\n                    }).then(response => response.text().then(text => {\r\n                        if (response.ok) {\r\n                            props.setResults(JSON.parse(text))\r\n                        }\r\n                        if (response.status == 403) {\r\n                            fetch(\"/api/refresh/token\", {\r\n                                method: 'POST',\r\n                                headers: {'Content-Type': 'application/json'},\r\n                                body: JSON.stringify({refresh_token: sessionStorage.getItem(\"refresh_token\")})\r\n                            }).then(response => response.json().then(rtoken => {\r\n                                if (response.ok) {\r\n                                    store.dispatch({type: \"TOKEN_UPDATE\", token: rtoken.token})\r\n                                    fetch(\"/api/app/area\", {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json;charset=utf-8',\r\n                                            'Authorization': `Bearer_${store.getState().token}`\r\n                                        },\r\n                                        body: JSON.stringify({x: x.id, y: props.y, r: getR()})\r\n                                    }).then(response => response.text().then(text => {\r\n                                        if (response.ok) {\r\n                                            props.setResults(JSON.parse(text))\r\n                                        } else {\r\n                                            props.messageText.current.show({\r\n                                                severity: 'error',\r\n                                                summary: 'Refresh token error'\r\n                                            })\r\n                                        }\r\n                                    }))\r\n                                } else {\r\n                                    props.messageText.current.show({\r\n                                        severity: 'error',\r\n                                        summary: 'Refresh token error'\r\n                                    })\r\n                                }\r\n                            }))\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    function getR() {\r\n        let R = 0;\r\n        props.r.map(r_1 => {\r\n            if(r_1.check === true){\r\n                R = r_1.id\r\n            }\r\n        })\r\n        return R\r\n    }\r\n\r\n\r\n    const onClear = () => {\r\n        fetch(\"/api/app/clear\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'Authorization': `Bearer_${store.getState().token}`\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                props.setResults(null)\r\n            }\r\n            if (response.status == 403) {\r\n                fetch(\"/api/refresh/token\", {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({refresh_token: sessionStorage.getItem(\"refresh_token\")})\r\n                }).then(response => response.json().then(rtoken => {\r\n                    if (response.ok) {\r\n                        store.dispatch({type: \"TOKEN_UPDATE\", token: rtoken.token})\r\n                        fetch(\"/api/app/clear\", {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json;charset=utf-8',\r\n                                'Authorization': `Bearer_${store.getState().token}`\r\n                            }\r\n                        }).then(response => {\r\n                            if (response.ok) {\r\n                                props.setResults(null)\r\n                            } else {\r\n                                props.messageText.current.show({\r\n                                    severity: 'error',\r\n                                    summary: 'Refresh token error'\r\n                                })\r\n                            }\r\n                        })\r\n                    } else {\r\n                        props.messageText.current.show({\r\n                            severity: 'error',\r\n                            summary: 'Refresh token error'\r\n                        })\r\n                    }\r\n                }))\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-align-center p-fluid\">\r\n            <form>\r\n                <Messages ref={(el) => props.messageText.current = el}/>\r\n                <div className=\"p-field p-grid\"     >\r\n                    <div className=\"p-field p-grid \">\r\n                        <br/>\r\n                        <label htmlFor=\"x_value\" className=\"p-sm-2 p-md-4 p-xl-6\">X:</label>\r\n                            <span className=\"p-sm-12 p-md-7 p-xl-5 p-col\" >\r\n                                {props.x.map(x =>{\r\n                                    return <Checkboxs  x={x} setX={props.setX} xs={props.x} key={x.id} string={\"x\"}/>\r\n                                })}\r\n                            </span>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-grid \">\r\n                        <label htmlFor=\"y_value\" className=\"p-sm-2 p-md-4 p-xl-6\">Y:</label>\r\n                        <div className=\"p-sm-12 p-md-7 p-xl-5 p-col\">\r\n                            <InputNumber id=\"y_value\" value={props.y} onValueChange={(e) => props.setY(e.value)} mode=\"decimal\"\r\n                                         min={-3} max={5}\r\n                                         minFractionDigits={1} maxFractionDigits={5} placeholder=\"Enter Y [-3;5]\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-field p-grid \">\r\n                        <br/>\r\n                        <label htmlFor=\"r_value\" className=\"p-sm-2 p-md-4 p-xl-6\">R:</label>\r\n                        <span className=\"p-sm-12 p-md-7 p-xl-5 p-col\" >\r\n                            {props.r.map(r =>{\r\n                                return <Checkboxs  x={r} setX={props.setR} xs={props.r} key={r.id} string={\"r\"} />\r\n                            })}\r\n                        </span>\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <div className=\"p-sm-12 p-md-6  p-align-center p-col\">\r\n                        <Button type=\"button\" onClick={onSubmit} className=\"p-button-primary p-margin\" label=\"Submit\" icon=\"pi\"/>\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    <div className=\"p-sm-12 p-md-6 p-xl-3 p-align-center p-col\" >\r\n                        <Button type=\"button\" onClick={onClear} className=\"p-button-primary\" label=\"Clear\" icon=\"pi\"/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\n\r\nexport default Form;\r\n","import React, {useEffect} from \"react\"\r\nimport store from \"../../storage/storage\";\r\nimport {Button} from \"primereact/button\";\r\n\r\n\r\nconst logoutHandle=()=>{\r\n    store.dispatch({type: \"TOKEN_CLEAR\", token: null})\r\n\r\n}\r\n\r\nfunction LogoutButton() {\r\n\r\n\r\n    return (\r\n        <div className=\"p-align-center p-fluid\">\r\n                <div className=\"p-sm-12 p-md-6 p-xl-3\">\r\n                    <Button type=\"button\" onClick={logoutHandle} className=\"p-button-primary p-margin\" label=\"Logout\"/>\r\n                </div>\r\n            <br/>\r\n        </div>\r\n    );\r\n}\r\nexport default LogoutButton","import React, {useEffect} from \"react\"\r\nimport store from \"../../storage/storage\";\r\nimport {Column} from \"primereact/column\";\r\nimport {DataTable} from \"primereact/datatable\";\r\nimport '../../index.css'\r\nimport {Button} from \"primereact/button\";\r\n\r\n\r\nfunction Table(props) {\r\n\r\n    const paginatorLeft = <Button type=\"button\" icon=\"pi pi-refresh\" className=\"p-button-text\" />;\r\n    const paginatorRight = <Button type=\"button\" icon=\"pi pi-cloud\" className=\"p-button-text\" />;\r\n\r\n    return<div >\r\n        <DataTable id=\"result_table\" value={props.results} paginator rows={10}\r\n                   paginatorLeft={paginatorLeft} paginatorRight={paginatorRight}>\r\n            <Column field=\"x\" header=\"x\"/>\r\n            <Column field=\"y\" header=\"y\"/>\r\n            <Column field=\"r\" header=\"r\"/>\r\n            <Column field=\"res\" header=\"result\"/>\r\n        </DataTable>\r\n    </div>\r\n}\r\nexport default Table","import store from \"../../storage/storage\";\r\n\r\n\r\nfunction getSign(x){\r\n    if (x<0){\r\n        return -1;\r\n    }else{\r\n        return 1;\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction coordinate_arrow(context, x0, y0, x1, y1) {\r\n\r\n    var length_head =7\r\n    var delta_x = x0 - x1;\r\n\r\n    context.font='15px courier new';\r\n\r\n    context.beginPath()\r\n    context.lineWidth = 2\r\n    context.moveTo(x0, y0)\r\n    context.lineTo(x1, y1)\r\n    context.stroke()\r\n\r\n\r\n    context.beginPath();\r\n    context.moveTo(x1, y1);\r\n    context.lineTo(x1+(getSign(delta_x)*length_head),y1+(getSign(delta_x)*length_head))\r\n    context.lineTo(x1-length_head,y1+length_head)\r\n    context.fill()\r\n\r\n}\r\n\r\nfunction getDashLength(x,y){\r\n    let dash_length\r\n\r\n\r\n\r\n    if(x>y){\r\n        dash_length = y / 6\r\n    }else{\r\n        dash_length = x / 6\r\n    }\r\n\r\n    return dash_length\r\n\r\n\r\n}\r\nfunction getRArray(R_value) {\r\n\r\n    let R=[]\r\n    if ((R_value !== null)&&(R_value !== 0)) {\r\n        R_value=parseFloat(R_value)\r\n        R[0] = R_value\r\n        R[1] = R_value / 2\r\n        R[2] = -R_value / 2\r\n        R[3] = -R_value\r\n    }else R=[\"R\",\"R/2\",\"-R/2\",\"-R\"]\r\n\r\n    return R\r\n}\r\n\r\nfunction coordinate_system(context, height_pers, width_pers, R){\r\n\r\n    let dash_length\r\n\r\n\r\n\r\n\r\n\r\n\r\n    context.strokeStyle = \"white\";\r\n    context.fillStyle = \"white\";\r\n\r\n\r\n    let y = context.canvas.height * height_pers\r\n    let x = context.canvas.width * width_pers\r\n\r\n    let y_coef=(context.canvas.height-y)/2\r\n    let x_coef=(context.canvas.width-x)/2\r\n\r\n    dash_length=getDashLength(x,y)\r\n\r\n    coordinate_arrow(context, x_coef , context.canvas.height *0.5, context.canvas.width - x_coef, context.canvas.height *0.5)\r\n    context.fillText('X', context.canvas.width - x_coef-10, context.canvas.height * 0.5+15)\r\n    coordinate_arrow(context, context.canvas.width *0.5, context.canvas.height - y_coef, context.canvas.width *0.5, y_coef)\r\n    context.fillText('Y', context.canvas.width * 0.5+10, y_coef+15)\r\n\r\n    let counterx=0\r\n\r\n    for (let i = -2; i <=2 ; i++) {\r\n        if (i !=0){\r\n            context.fillText(R[counterx],context.canvas.width/2+6,context.canvas.height/2+dash_length*i+5)\r\n            context.beginPath()\r\n            context.moveTo(context.canvas.width/2-4,context.canvas.height/2+dash_length*i)\r\n            context.lineTo(context.canvas.width/2+4,context.canvas.height/2+dash_length*i)\r\n            context.stroke()\r\n            counterx++\r\n        }\r\n    }\r\n\r\n    let countery=3\r\n    for (let i = -2; i <=2 ; i++) {\r\n        if(i != 0){\r\n            context.fillText(R[countery],context.canvas.width/2+dash_length*i-5, context.canvas.height/2-10)\r\n            context.beginPath()\r\n            context.moveTo(context.canvas.width/2+dash_length*i, context.canvas.height/2+4)\r\n            context.lineTo(context.canvas.width/2+dash_length*i, context.canvas.height/2-4)\r\n            context.stroke()\r\n            countery--\r\n        }\r\n    }\r\n\r\n\r\n}\r\nfunction draw(r,context){\r\n\r\n    let r_array = getRArray(r)\r\n\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height)\r\n\r\n    if (r !== 0) {\r\n\r\n        context.strokeStyle = \"#00A66F\"\r\n        context.fillStyle = \"#00A66F\"\r\n\r\n        let step = getDashLength(context.canvas.width, context.canvas.height)\r\n        let x = context.canvas.width / 2;\r\n        let y = context.canvas.height / 2;\r\n\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.arc(x, y, 2 * step, 0, Math.PI / 2, false);\r\n        context.fill();\r\n\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.lineTo(x - step, y);\r\n        context.lineTo(x, y - 2 * step);\r\n        context.fill();\r\n\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.lineTo(x + 2 * step, y);\r\n        context.lineTo(x + 2 * step, y - 2 * step);\r\n        context.lineTo(x, y - 2 * step);\r\n        context.fill();\r\n    }\r\n\r\n    coordinate_system(context,1,1,r_array)\r\n    coordinate_system(context,1,1,r_array)\r\n\r\n}\r\n\r\n\r\nfunction drawResult(x, y, R,alpha,red,green, context) {\r\n\r\n\r\n\r\n    let dash_length\r\n    if (R == 0){\r\n        dash_length = 0\r\n    } else {\r\n        dash_length = 2*getDashLength(context.canvas.width, context.canvas.height)/R\r\n    }\r\n\r\n    context.strokeStyle = `rgba(${red},${green},0,${alpha})`;\r\n    context.fillStyle = `rgba(${red},${green},0,${alpha})`;\r\n\r\n    context.beginPath()\r\n    context.moveTo(context.canvas.width/2+x*dash_length,context.canvas.height/2-y*dash_length)\r\n    context.arc(context.canvas.width/2+x*dash_length,context.canvas.height/2-y*dash_length,4,0,2*Math.PI)\r\n    context.fill()\r\n}\r\n\r\nfunction clickPoint(event,context,r, validateNumber, messageText, setResults){\r\n\r\n\r\n\r\n    let R=r\r\n    let dash_length = 4*getDashLength(context.canvas.width, context.canvas.height)/R\r\n\r\n    const x_c = event.nativeEvent.offsetX\r\n    const y_c = event.nativeEvent.offsetY\r\n\r\n    let x = (2*x_c - context.canvas.width)/dash_length\r\n    let y = -((2*y_c - context.canvas.height)/dash_length)\r\n\r\n    console.log((2*x_c - context.canvas.width)/dash_length)\r\n\r\n    if (!validateNumber(x, -3, 5) || !validateNumber(y, -5, 5) ||!validateNumber(r, -3, 5)){\r\n        if (messageText.current !== null) {\r\n            messageText.current.show({\r\n                severity: 'warn',\r\n                summary: 'Validation error'\r\n            })\r\n        }\r\n    }else {\r\n        fetch(\"/api/app/area\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                'Authorization': `Bearer_${store.getState().token}`\r\n            },\r\n            body: JSON.stringify({x: x, y:y, r: r})\r\n        }).then(response => response.text().then(text => {\r\n            if (response.ok) {\r\n                setResults(JSON.parse(text))\r\n            }\r\n            if (response.status == 403) {\r\n                fetch(\"/api/refresh/token\", {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({refresh_token: sessionStorage.getItem(\"refresh_token\")})\r\n                }).then(response => response.json().then(rtoken => {\r\n                    if (response.ok) {\r\n                        store.dispatch({type: \"TOKEN_UPDATE\", token: rtoken.token})\r\n                        fetch(\"/api/app/area\", {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json;charset=utf-8',\r\n                                'Authorization': `Bearer_${store.getState().token}`\r\n                            },\r\n                            body: JSON.stringify({x: x, y: y, r: r})\r\n                        }).then(response => response.text().then(text => {\r\n                            if (response.ok) {\r\n                                setResults(JSON.parse(text))\r\n                            } else {\r\n                                messageText.current.show({\r\n                                    severity: 'error',\r\n                                    summary: 'Refresh token error'\r\n                                })\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        messageText.current.show({\r\n                            severity: 'error',\r\n                            summary: 'Refresh token error'\r\n                        })\r\n                    }\r\n                }))\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction drawPoints(r, results, context){\r\n\r\n    if (results.length>0) {\r\n        let i_old;\r\n        let iter = 1;\r\n        if (results.length>5){\r\n            i_old = results.length -5\r\n        }else i_old=0\r\n\r\n\r\n        for (let i = results.length-1; i >= i_old ; i--) {\r\n            console.log(results[i].x+\"                           \"+parseFloat(results[i].x))\r\n            if (results[i].res == \"true\")\r\n                drawResult(parseFloat(results[i].x), parseFloat(results[i].y),parseFloat(r),5 / (5 * iter),0,255, context)\r\n            else drawResult(parseFloat(results[i].x), parseFloat(results[i].y),parseFloat(r),5 / (5 * iter),255 , 0, context)\r\n            iter++\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport {draw,drawPoints,clickPoint}","import React, {useEffect, useRef} from \"react\"\r\nimport {clickPoint, draw, drawPoints} from \"./draw\"\r\nimport Checkboxs from \"./Checkboxs\";\r\n\r\nfunction Canvas(props) {\r\n    const canvas = useRef()\r\n\r\n    function maxR(){\r\n        let maxR = 0;\r\n        {props.r.map(r =>{\r\n            if(r.check === true){\r\n                maxR = r.id\r\n            }\r\n        })}\r\n        return maxR;\r\n    }\r\n    useEffect(() => {\r\n        draw(maxR(), canvas.current.getContext(\"2d\"));\r\n        if(props.results != null) {\r\n            drawPoints(maxR(), props.results, canvas.current.getContext(\"2d\"))\r\n        }\r\n    }, [draw, drawPoints, props]);\r\n    return <div>\r\n\r\n        <canvas className=\"p-align-center\" width=\"750\" height=\"500\" ref={canvas} onClick={(e) => {\r\n            clickPoint(e, canvas.current.getContext(\"2d\"),maxR(), props.validateNumber, props.messageText, props.setResults)\r\n        }}/>\r\n    </div>\r\n}\r\n\r\nexport default Canvas;","import React, {useEffect, useRef, useState} from \"react\"\r\nimport store from \"../../storage/storage\";\r\nimport Form from \"./Form\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport Table from \"./Table\";\r\nimport Canvas from \"./Canvas\";\r\n\r\n\r\nfunction HomePage() {\r\n    const [results, setResults] = useState(null)\r\n    const [x_vals, setX] = React.useState([   {id : -3, check: false},\r\n                                                        {id : -2, check: false},\r\n                                                        {id : -1, check: false},\r\n                                                        {id : 0, check: false},\r\n                                                        {id : 1, check: false},\r\n                                                        {id : 2, check: false},\r\n                                                        {id : 3, check: false},\r\n                                                        {id : 4, check: false},\r\n                                                        {id : 5, check: false}]);\r\n    const [y_val, setY] = useState(null);\r\n    const [r_vals, setR] = React.useState([   {id : 1,   check: false},\r\n                                                        {id : 2,   check: false},\r\n                                                        {id : 3,   check: false},\r\n                                                        {id : 4,   check: false},\r\n                                                        {id : 5,   check: false}]);\r\n    const MessageText = useRef()\r\n\r\n    function validate_number(str, min, max) {\r\n        let n = parseFloat(str);\r\n        return (!isNaN(n) && n >= min && n <= max);\r\n    }\r\n\r\n    function validate(){\r\n        const validation_result = !validate_number(y_val, -5, 5)\r\n        if (validation_result){\r\n            if (MessageText.current !== null) {\r\n                MessageText.current.show({\r\n                    severity: 'warn',\r\n                    summary: 'Validation error'\r\n                })\r\n            }\r\n        }\r\n        return !validation_result\r\n    }\r\n\r\n    function getR() {\r\n        let R = 0;\r\n        r_vals.map(r_1 => {\r\n            if(r_1.check === true){\r\n                R = r_1.id\r\n            }\r\n        })\r\n        return R\r\n    }\r\n\r\n    useEffect(() => {\r\n        x_vals.map(x_vals => {\r\n            if (x_vals.check === true) {\r\n                if (results === null) {\r\n                    fetch(\"/api/app/results\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json;charset=utf-8',\r\n                            'Authorization': `Bearer_${store.getState().token}`\r\n                        },\r\n                    }).then(response => response.text().then(text => {\r\n                        if (response.ok) {\r\n                            setResults(JSON.parse(text))\r\n                        }\r\n                        if (response.status == 403) {\r\n                            fetch(\"/api/refresh/token\", {\r\n                                method: 'POST',\r\n                                headers: {'Content-Type': 'application/json'},\r\n                                body: JSON.stringify({refresh_token: sessionStorage.getItem(\"refresh_token\")})\r\n                            }).then(response => response.json().then(rtoken => {\r\n                                if (response.ok) {\r\n                                    store.dispatch({type: \"TOKEN_UPDATE\", token: rtoken.token})\r\n                                    fetch(\"/api/app/area\", {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json;charset=utf-8',\r\n                                            'Authorization': `Bearer_${store.getState().token}`\r\n                                        },\r\n                                        body: JSON.stringify({\r\n                                            x: x_vals.id,\r\n                                            y: y_val,\r\n                                            r: getR()\r\n                                        })\r\n                                    }).then(response => response.text().then(text => {\r\n                                        if (response.ok) {\r\n                                            setResults(JSON.parse(text))\r\n                                        } else {\r\n                                            MessageText.current.show({\r\n                                                severity: 'error',\r\n                                                summary: 'Refresh token error'\r\n                                            })\r\n                                        }\r\n                                    }))\r\n                                } else {\r\n                                    MessageText.current.show({\r\n                                        severity: 'error',\r\n                                        summary: 'Refresh token error'\r\n                                    })\r\n                                }\r\n                            }))\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <LogoutButton />\r\n            <Canvas validateNumber={validate_number} messageText={MessageText}  x={x_vals} y={y_val} r={r_vals} results={results} setResults={setResults}/>\r\n            <Form setResults={setResults} messageText={MessageText} x={x_vals} y={y_val} r={r_vals} setX={setX} setY={setY} setR={setR} validate={validate}/>\r\n            <Table results={results}/>\r\n        </div>\r\n    );\r\n}\r\nexport default HomePage","import React, {useState} from \"react\";\r\nimport './StyleForm.css';\r\nimport store from \"../../storage/storage\";\r\nimport {Messages} from \"primereact/messages\";\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from \"primereact/button\";\r\nimport {Password} from 'primereact/password';\r\nimport \"../../index.css\"\r\n\r\n\r\nlet MessagesInstance\r\nfunction LoginForm() {\r\n\r\n    const onSignIn=(e)=>{\r\n        const data ={\r\n            \"username\":username,\r\n            \"password\":password\r\n        }\r\n\r\n        fetch(\"/api/auth/login\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n        }).then(response => response.json().then(json => {\r\n            if (response.ok) {\r\n                store.dispatch({type: \"NEW_TOKEN\", token: json.token, rtoken:json.refresh_token})\r\n            } else if (response.status === 403) {\r\n                MessagesInstance.show({\r\n                    severity: 'error',\r\n                    summary: json.description\r\n                })\r\n            } else {\r\n                MessagesInstance.show({\r\n                    severity: 'error',\r\n                    summary: 'Unhandled error'\r\n                })\r\n            }\r\n        }))\r\n    }\r\n\r\n    const onSignUp=(e)=>{\r\n        const data ={\r\n            \"username\":username,\r\n            \"password\":password\r\n        }\r\n\r\n        fetch(\"/api/auth/register\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n        }).then(response => response.json().then(json => {\r\n            if (response.ok) {\r\n                store.dispatch({type: \"NEW_TOKEN\", token: json.token, rtoken:json.refresh_token})\r\n            } else if (response.status === 403) {\r\n                MessagesInstance.show({\r\n                    severity: 'error',\r\n                    summary: json.description\r\n                })\r\n            } else {\r\n                MessagesInstance.show({\r\n                    severity: 'error',\r\n                    summary: 'Unhandled error'\r\n                })\r\n            }\r\n        }))\r\n    }\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    return (\r\n        <div className=\"p-align-center p-fluid\">\r\n            <form className=\"form_div\">\r\n                <Messages icon ref={(el) => MessagesInstance = el}/>\r\n                <div className=\"p-field p-grid\"     >\r\n\r\n                    <div className=\"p-field p-grid\">\r\n                        <label htmlFor=\"username\" className=\"p-sm-2 p-md-4 p-xl-6\">Username</label>\r\n                        <div className=\"p-sm-12 p-md-7 p-xl-5\">\r\n                            <InputText id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-field p-grid \">\r\n                        <label htmlFor=\"password\" className=\"p-sm-2 p-md-4 p-xl-6\">Password</label>\r\n                        <div className=\"p-sm-12 p-md-7 p-xl-5 \">\r\n                            <Password id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"p-sm-12 p-md-6  p-align-center\">\r\n                        <Button type=\"button\" onClick={onSignIn} className=\"p-button-primary p-margin\" label=\"Sign in\" icon=\"pi\"/>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"p-sm-12 p-md-6 p-xl-3 p-align-center\" >\r\n                        <Button type=\"button\" onClick={onSignUp} className=\"p-button-primary \" label=\"Register\" icon=\"pi\"/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from 'react';\r\nimport HomePage from \"./components/main/HomePage\";\r\nimport LoginForm from \"./components/login/LoginForm\";\r\nimport {Panel} from \"primereact/panel\";\r\nimport 'primereact/resources/themes/bootstrap4-dark-blue/theme.css';\r\nimport 'primereact/resources/primereact.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.store.subscribe(() => {\r\n            this.setState({reduxState: this.props.store.getState()});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-justify-center wrapper\">\r\n                <div className=\"p-col p-sm-12 p-md-8 p-xl-5\">\r\n                    <Panel header={\"Lyubkin and Patutin №21382\"}>\r\n                        {this.props.store.getState().token !== null ?   <HomePage/> :<LoginForm/> }  {/*<HomePage/> :<LoginForm/> | <LoginForm/> : <HomePage/> */}\r\n                </Panel>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./storage/storage\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App store={store}/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}